{"ast":null,"code":"// src/components/RegisterPage.js\n// Import necessary dependencies\nimport React,{useState}from'react';import{useNavigate}from'react-router-dom';// Hook to programmatically navigate between routes\nimport axios from'../utils/axiosConfig';// Configured Axios instance for API requests\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function RegisterPage(){const navigate=useNavigate();// Initialize navigation function for redirecting user\n// State hooks for managing registration form inputs, error messages, and loading state\nconst[username,setUsername]=useState('');// Stores the entered username\nconst[password,setPassword]=useState('');// Stores the entered password\nconst[error,setError]=useState(null);// Stores error messages to display to the user\nconst[loading,setLoading]=useState(false);// Indicates if the registration request is in progress\n// Function to handle form submission and registration\nconst handleRegister=async e=>{e.preventDefault();// Prevents default form submission behavior\nsetLoading(true);// Sets loading state to true while registration request is in progress\nsetError(null);// Clears any previous error messages\ntry{// Sends a POST request to the registration endpoint with username and password\nconst response=await axios.post('/users/register',{username,password});if(response.status===200){// If registration is successful, alert the user and navigate to the login page\nalert(\"Registration successful! You can now log in.\");navigate('/login');// Redirects to login page upon successful registration\n}}catch(error){var _error$response;// If there’s an error during registration, display an error message\nsetError(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||'Registration failed. Please try again.');}finally{setLoading(false);// Resets loading state after request completes\n}};// Render registration form with error messages and loading indicators\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"register-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register for Garden Chat\"}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)// Update username state on input change\n,required:true// Makes the input field required\n}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)// Update password state on input change\n,required:true// Makes the input field required\n}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",disabled:loading,children:[\" \",loading?'Registering...':'Register',\" \"]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Login here\"})]}),\" \"]});}export default RegisterPage;// Export component for use in other parts of the app","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","RegisterPage","navigate","username","setUsername","password","setPassword","error","setError","loading","setLoading","handleRegister","e","preventDefault","response","post","status","alert","_error$response","data","className","children","onSubmit","type","placeholder","value","onChange","target","required","disabled","href"],"sources":["D:/bootcamp/SpringFrame/Project/Garden-Chat-FullStack/garden-chat-frontend/src/components/RegisterPage.js"],"sourcesContent":["// src/components/RegisterPage.js\r\n\r\n// Import necessary dependencies\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Hook to programmatically navigate between routes\r\nimport axios from '../utils/axiosConfig'; // Configured Axios instance for API requests\r\n\r\nfunction RegisterPage() {\r\n    const navigate = useNavigate();  // Initialize navigation function for redirecting user\r\n    // State hooks for managing registration form inputs, error messages, and loading state\r\n    const [username, setUsername] = useState(''); // Stores the entered username\r\n    const [password, setPassword] = useState(''); // Stores the entered password\r\n    const [error, setError] = useState(null); // Stores error messages to display to the user\r\n    const [loading, setLoading] = useState(false); // Indicates if the registration request is in progress\r\n\r\n    // Function to handle form submission and registration\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault(); // Prevents default form submission behavior\r\n        setLoading(true); // Sets loading state to true while registration request is in progress\r\n        setError(null); // Clears any previous error messages\r\n\r\n        try {\r\n            // Sends a POST request to the registration endpoint with username and password\r\n            const response = await axios.post('/users/register', { username, password });\r\n            if (response.status === 200) {\r\n                // If registration is successful, alert the user and navigate to the login page\r\n                alert(\"Registration successful! You can now log in.\");\r\n                navigate('/login'); // Redirects to login page upon successful registration\r\n            }\r\n        } catch (error) {\r\n            // If there’s an error during registration, display an error message\r\n            setError(error.response?.data || 'Registration failed. Please try again.');\r\n        } finally {\r\n            setLoading(false); // Resets loading state after request completes\r\n        }\r\n    };\r\n\r\n    // Render registration form with error messages and loading indicators\r\n    return (\r\n        <div className=\"register-page\">\r\n            <h2>Register for Garden Chat</h2> {/* Page title */}\r\n            <form onSubmit={handleRegister}>\r\n                {error && <div className=\"error-message\">{error}</div>} {/* Display error if any */}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)} // Update username state on input change\r\n                    required // Makes the input field required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)} // Update password state on input change\r\n                    required // Makes the input field required\r\n                />\r\n                <button type=\"submit\" disabled={loading}> {/* Button is disabled while loading */}\r\n                    {loading ? 'Registering...' : 'Register'} {/* Show \"Registering...\" text if loading */}\r\n                </button>\r\n            </form>\r\n            <p>Already have an account? <a href=\"/login\">Login here</a></p> {/* Link to login page for existing users */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterPage; // Export component for use in other parts of the app\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}