{"ast":null,"code":"var _jsxFileName = \"D:\\\\bootcamp\\\\SpringFrame\\\\Project\\\\Garden-Chat-FullStack\\\\garden-chat-frontend\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\n// src/components/Sidebar.js\nimport React, { useState } from 'react';\n\n// Sidebar component to display chat groups and online users, as well as options to create new groups\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar({\n  groups,\n  selectGroup,\n  onlineUsers,\n  createGroup\n}) {\n  _s();\n  // State to control the visibility of the \"Create Group\" modal\n  const [showModal, setShowModal] = useState(false);\n\n  // State to hold the new group name entered by the user in the modal\n  const [newGroupName, setNewGroupName] = useState('');\n\n  // Function to handle the creation of a new group\n  const handleCreateGroup = () => {\n    createGroup(newGroupName); // Call the provided createGroup function with the new group name\n    setShowModal(false); // Close the modal after creating the group\n    setNewGroupName(''); // Reset the input field for group name\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Channels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => selectGroup(group),\n      children: [\"#\", group, \"    \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      className: \"create-group-btn\",\n      children: \"+ Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Create New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Group Name\",\n          value: newGroupName,\n          onChange: e => setNewGroupName(e.target.value) // Update state as user types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateGroup,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Online Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), onlineUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"online-user\",\n      children: [user, \"  \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"yVkaeHotuabT/RGbXvJU+OJDBsA=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sidebar","groups","selectGroup","onlineUsers","createGroup","_s","showModal","setShowModal","newGroupName","setNewGroupName","handleCreateGroup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","index","onClick","type","placeholder","value","onChange","e","target","user","_c","$RefreshReg$"],"sources":["D:/bootcamp/SpringFrame/Project/Garden-Chat-FullStack/garden-chat-frontend/src/components/Sidebar.js"],"sourcesContent":["// src/components/Sidebar.js\r\nimport React, { useState } from 'react';\r\n\r\n// Sidebar component to display chat groups and online users, as well as options to create new groups\r\nfunction Sidebar({ groups, selectGroup, onlineUsers, createGroup }) {\r\n    // State to control the visibility of the \"Create Group\" modal\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    // State to hold the new group name entered by the user in the modal\r\n    const [newGroupName, setNewGroupName] = useState('');\r\n\r\n    // Function to handle the creation of a new group\r\n    const handleCreateGroup = () => {\r\n        createGroup(newGroupName);   // Call the provided createGroup function with the new group name\r\n        setShowModal(false);         // Close the modal after creating the group\r\n        setNewGroupName('');         // Reset the input field for group name\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {/* Displaying the list of chat groups */}\r\n            <h3>Channels</h3>\r\n            {groups.map((group, index) => (\r\n                <p key={index} onClick={() => selectGroup(group)}>\r\n                    #{group}    {/* Display each group name prefixed with \"#\" */}\r\n                </p>\r\n            ))}\r\n\r\n            {/* Button to open the \"Create Group\" modal */}\r\n            <button onClick={() => setShowModal(true)} className=\"create-group-btn\">\r\n                + Create Group\r\n            </button>\r\n\r\n            {/* Modal to input the name for a new group */}\r\n            {showModal && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <h4>Create New Group</h4>\r\n                        {/* Input for the new group name */}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Group Name\"\r\n                            value={newGroupName}\r\n                            onChange={(e) => setNewGroupName(e.target.value)}   // Update state as user types\r\n                        />\r\n                        {/* Button to create the group */}\r\n                        <button onClick={handleCreateGroup}>Create</button>\r\n                        {/* Button to cancel and close the modal */}\r\n                        <button onClick={() => setShowModal(false)}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Displaying the list of online users */}\r\n            <h3>Online Users</h3>\r\n            {onlineUsers.map((user, index) => (\r\n                <p key={index} className=\"online-user\">\r\n                    {user}  {/* Display each online user's name */}\r\n                </p>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}