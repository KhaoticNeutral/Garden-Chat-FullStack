{"ast":null,"code":"var _jsxFileName = \"D:\\\\bootcamp\\\\SpringFrame\\\\Project\\\\Garden-Chat-FullStack\\\\garden-chat-frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/components/LoginPage.js\n\n// Import necessary dependencies from React, router, and authentication context\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthProvider'; // Custom authentication hook for managing login state\nimport axios from '../utils/axiosConfig'; // Configured Axios instance for API requests\nimport WebSocketService from '../services/WebSocketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  // State hooks for managing login form inputs, error messages, and loading state\n  const [username, setUsername] = useState(''); // Stores the entered username\n  const [password, setPassword] = useState(''); // Stores the entered password\n  const [error, setError] = useState(null); // Stores error messages to display to the user\n  const [loading, setLoading] = useState(false); // Indicates if the login request is in progress\n\n  // Get login function from authentication context and router's navigation function\n  const {\n    login\n  } = useAuth(); // login function for setting user session\n  const navigate = useNavigate(); // Router function to programmatically navigate between routes\n\n  // Function to handle form submission and login\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      // Login API request\n      const response = await axios.post('/users/login', {\n        username,\n        password\n      });\n      if (response.data.token) {\n        // Save user session\n        login(username, response.data.token);\n        localStorage.setItem('username', username);\n\n        // Initialize WebSocket\n        try {\n          await WebSocketService.connect(() => {}, () => {});\n        } catch (wsError) {\n          console.error(\"[Login Warning] STOMP connection delayed. Proceeding to chat...\");\n        }\n\n        // Navigate to chat page\n        console.log(\"[Login Success] Navigating to chat page...\");\n        navigate('/chat');\n      } else {\n        setError(\"Login failed. Invalid response from server.\");\n      }\n    } catch (err) {\n      setError(\"Login failed. Please check your credentials.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Render login form with error messages and loading indicators\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to Garden Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value) // Update username state on input change\n        ,\n        placeholder: \"Username\",\n        required: true // Makes the input field required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // Update password state on input change\n        ,\n        placeholder: \"Password\",\n        required: true // Makes the input field required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: [\" \", loading ? 'Logging in...' : 'Login', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"ITcpD1yDRG8AcOqbNbJdmgcAivg=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage; // Export component for use in other parts of the app\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","axios","WebSocketService","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","error","setError","loading","setLoading","login","navigate","handleLogin","e","preventDefault","response","post","data","token","localStorage","setItem","connect","wsError","console","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","href","_c","$RefreshReg$"],"sources":["D:/bootcamp/SpringFrame/Project/Garden-Chat-FullStack/garden-chat-frontend/src/components/LoginPage.js"],"sourcesContent":["// src/components/LoginPage.js\r\n\r\n// Import necessary dependencies from React, router, and authentication context\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthProvider'; // Custom authentication hook for managing login state\r\nimport axios from '../utils/axiosConfig'; // Configured Axios instance for API requests\r\nimport WebSocketService from '../services/WebSocketService';\r\n\r\nfunction LoginPage() {\r\n    // State hooks for managing login form inputs, error messages, and loading state\r\n    const [username, setUsername] = useState(''); // Stores the entered username\r\n    const [password, setPassword] = useState(''); // Stores the entered password\r\n    const [error, setError] = useState(null); // Stores error messages to display to the user\r\n    const [loading, setLoading] = useState(false); // Indicates if the login request is in progress\r\n\r\n    // Get login function from authentication context and router's navigation function\r\n    const { login } = useAuth(); // login function for setting user session\r\n    const navigate = useNavigate(); // Router function to programmatically navigate between routes\r\n\r\n    // Function to handle form submission and login\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Login API request\r\n            const response = await axios.post('/users/login', { username, password });\r\n            if (response.data.token) {\r\n                // Save user session\r\n                login(username, response.data.token);\r\n                localStorage.setItem('username', username);\r\n\r\n                // Initialize WebSocket\r\n                try {\r\n                    await WebSocketService.connect(() => {}, () => {});\r\n                } catch (wsError) {\r\n                    console.error(\"[Login Warning] STOMP connection delayed. Proceeding to chat...\");\r\n                }\r\n\r\n                // Navigate to chat page\r\n                console.log(\"[Login Success] Navigating to chat page...\");\r\n                navigate('/chat');\r\n            } else {\r\n                setError(\"Login failed. Invalid response from server.\");\r\n            }\r\n        } catch (err) {\r\n            setError(\"Login failed. Please check your credentials.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Render login form with error messages and loading indicators\r\n    return (\r\n        <div className=\"login-page\">\r\n            <h2>Login to Garden Chat</h2> {/* Page title */}\r\n            {error && <div className=\"error-message\">{error}</div>} {/* Display error if any */}\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)} // Update username state on input change\r\n                    placeholder=\"Username\"\r\n                    required // Makes the input field required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)} // Update password state on input change\r\n                    placeholder=\"Password\"\r\n                    required // Makes the input field required\r\n                />\r\n                <button type=\"submit\" disabled={loading}> {/* Button is disabled while loading */}\r\n                    {loading ? 'Logging in...' : 'Login'} {/* Show \"Logging in...\" text if loading */}\r\n                </button>\r\n            </form>\r\n            <p>Don't have an account? <a href=\"/register\">Register here</a></p> {/* Link to registration page */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage; // Export component for use in other parts of the app\r\n"],"mappings":";;AAAA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB,CAAC,CAAC;AACnD,OAAOC,KAAK,MAAM,sBAAsB,CAAC,CAAC;AAC1C,OAAOC,gBAAgB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAM;IAAEiB;EAAM,CAAC,GAAGf,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAMgB,QAAQ,GAAGjB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMkB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA;MACA,MAAMQ,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,cAAc,EAAE;QAAEd,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACzE,IAAIW,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACrB;QACAR,KAAK,CAACR,QAAQ,EAAEa,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;QACpCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAElB,QAAQ,CAAC;;QAE1C;QACA,IAAI;UACA,MAAML,gBAAgB,CAACwB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,OAAOC,OAAO,EAAE;UACdC,OAAO,CAACjB,KAAK,CAAC,iEAAiE,CAAC;QACpF;;QAEA;QACAiB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QACzDb,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,MAAM;QACHJ,QAAQ,CAAC,6CAA6C,CAAC;MAC3D;IACJ,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACVlB,QAAQ,CAAC,8CAA8C,CAAC;IAC5D,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACA,oBACIV,OAAA;IAAK2B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB5B,OAAA;MAAA4B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,EAC7BzB,KAAK,iBAAIP,OAAA;MAAK2B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAAC,GAAC,eACxDhC,OAAA;MAAMiC,QAAQ,EAAEpB,WAAY;MAAAe,QAAA,gBACxB5B,OAAA;QACIkC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhC,QAAS;QAChBiC,QAAQ,EAAGtB,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE,CAAC;QAAA;QAC9CG,WAAW,EAAC,UAAU;QACtBC,QAAQ,OAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACFhC,OAAA;QACIkC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAE9B,QAAS;QAChB+B,QAAQ,EAAGtB,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE,CAAC;QAAA;QAC9CG,WAAW,EAAC,UAAU;QACtBC,QAAQ,OAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACFhC,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAACM,QAAQ,EAAE/B,OAAQ;QAAAmB,QAAA,GAAC,GAAC,EACrCnB,OAAO,GAAG,eAAe,GAAG,OAAO,EAAC,GAAC;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACPhC,OAAA;MAAA4B,QAAA,GAAG,yBAAuB,eAAA5B,OAAA;QAAGyC,IAAI,EAAC,WAAW;QAAAb,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEd;AAAC9B,EAAA,CAxEQD,SAAS;EAAA,QAQIL,OAAO,EACRD,WAAW;AAAA;AAAA+C,EAAA,GATvBzC,SAAS;AA0ElB,eAAeA,SAAS,CAAC,CAAC;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}